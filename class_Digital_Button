/*  Digital input push button class
 *  Made by sendust 2020/8/29
 *  Has feed back LED
 *  detect failing edge -> .scan() function will return input pin number
 * 
 * 
 */

#define LED_DECAY 5000
#define BUTTON_DELAY 100

class pushbutton_withled
{
  private:
  int m_keyinput;
  int m_ledoutput;
  int m_button_previous;
  int m_button_now;
  int m_result;
  unsigned int m_led_duration = 0;
  unsigned int m_count_push = 0;
  unsigned long m_last_transition;
  const unsigned long m_guard_time = 0xFFFFFFFF - BUTTON_DELAY;

  public:

  pushbutton_withled(int keyinput, int ledoutput)   // Initiator (define button input pin, led outpupt pin)
  {
    m_keyinput = keyinput;
    m_ledoutput = ledoutput;
    pinMode(keyinput, INPUT_PULLUP);
    pinMode(ledoutput, OUTPUT);
    m_last_transition = millis();
    m_button_previous = digitalRead(keyinput);
    m_button_now = digitalRead(keyinput);
  }

  int scan(unsigned long time_milli)
  {
    m_button_now = digitalRead(m_keyinput);
    m_result = 0;
    if (m_button_now == 0)
      if (m_button_previous == 1)
        if (time_milli - m_last_transition > BUTTON_DELAY)
          if (time_milli - m_last_transition < m_guard_time)     // prevent unsigned long overflow event
          {
            m_last_transition = time_milli;
            m_led_duration = LED_DECAY;
            m_result = m_keyinput;
            Serial.print(m_keyinput);
            Serial.print(" Button Pressed // ");
            Serial.print("press count = ");
            Serial.println(++m_count_push);
          }
        
    if (m_button_now == 1)
      if (m_button_previous == 0)
        m_last_transition = time_milli;   // Record release time

    if (m_led_duration)
      m_led_duration--;
      
    digitalWrite(m_ledoutput, m_led_duration);   // on or off feedback LED

    m_button_previous = m_button_now;
    return m_result;
  }


};

pushbutton_withled btn_digital1(3, 13);     // Define button input pin, LED output pin
pushbutton_withled btn_digital2(4, 13);
pushbutton_withled btn_digital3(5, 13);
pushbutton_withled btn_digital4(6, 13);

unsigned long time_current;

void setup() {
  // put your setup code here, to run once:
  
  Serial.begin(115200);
  Serial.println("----------  Start push button example code -----------------");
  pinMode(7, OUTPUT);
  digitalWrite(7, LOW);

  
}

void loop() {
  // put your main code here, to run repeatedly:
  time_current = millis();
  btn_digital1.scan(time_current);
  btn_digital2.scan(time_current);
  btn_digital3.scan(time_current);
  btn_digital4.scan(time_current);
}
